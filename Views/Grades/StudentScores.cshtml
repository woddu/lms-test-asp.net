@model lms_test1.Models.ViewModels.Grade.StudentScoresViewModel

@{
    ViewData["Title"] = "Scores of " + Model.Student.LastName + ", " + Model.Student.FirstName;
    int wwcount_First = 0;
    int wwcount_Second = 0;
    int ptcount_First = 0;
    int ptcount_Second = 0;

    if(Model.TeacherSubject.WW1_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW2_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW3_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW4_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW5_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW6_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW7_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW8_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW9_First != 0) wwcount_First++;
    if(Model.TeacherSubject.WW10_First != 0) wwcount_First++;

    if(Model.TeacherSubject.WW1_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW2_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW3_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW4_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW5_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW6_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW7_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW8_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW9_Second != 0) wwcount_Second++;
    if(Model.TeacherSubject.WW10_Second != 0) wwcount_Second++;


    if(Model.TeacherSubject.PT1_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT2_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT3_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT4_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT5_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT6_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT7_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT8_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT9_First != 0) ptcount_First++;
    if(Model.TeacherSubject.PT10_First != 0) ptcount_First++;

    if(Model.TeacherSubject.PT1_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT2_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT3_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT4_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT5_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT6_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT7_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT8_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT9_Second != 0) ptcount_Second++;
    if(Model.TeacherSubject.PT10_Second != 0) ptcount_Second++;
}

<header>
    <div class="breadcrumbs mx-auto">
        <a asp-controller="Grades" asp-action="Index">My Subjects</a> >
        <a asp-controller="Grades" asp-action="SubjectDetails" asp-route-teacherSubjectId="@Model.TeacherSubject.Id">
            @Model.TeacherSubject.Subject.Name Details 
        </a> >
        <a asp-controller="Grades" asp-action="SectionStudents" asp-route-teacherSubjectId="@Model.TeacherSubject.Id" asp-route-sectionId="@Model.TeacherSubject.TeacherSubjectSections.First().Section.Id">
            Students in @Model.TeacherSubject.TeacherSubjectSections.First().Section.Name  
        </a> >
        <span>@ViewData["Title"]</span>
    </div>

    <h2 class="title">@ViewData["Title"] in @Model.TeacherSubject.Subject.Name</h2>
</header>

<div class="prevent-overflow px-8">
    <table class="pure-table">
        <thead>
            <tr>
                <th>Highest</th>
                @if(wwcount_First == 0) { <th>No Written Works</th> }
                else
                {
                    @if(Model.TeacherSubject.WW1_First != 0) { <th>@Model.TeacherSubject.WW1_First</th> }
                    @if(Model.TeacherSubject.WW2_First != 0) { <th>@Model.TeacherSubject.WW2_First</th> }
                    @if(Model.TeacherSubject.WW3_First != 0) { <th>@Model.TeacherSubject.WW3_First</th> }
                    @if(Model.TeacherSubject.WW4_First != 0) { <th>@Model.TeacherSubject.WW4_First</th> }
                    @if(Model.TeacherSubject.WW5_First != 0) { <th>@Model.TeacherSubject.WW5_First</th> }
                    @if(Model.TeacherSubject.WW6_First != 0) { <th>@Model.TeacherSubject.WW6_First</th> }
                    @if(Model.TeacherSubject.WW7_First != 0) { <th>@Model.TeacherSubject.WW7_First</th> }
                    @if(Model.TeacherSubject.WW8_First != 0) { <th>@Model.TeacherSubject.WW8_First</th> }
                    @if(Model.TeacherSubject.WW9_First != 0) { <th>@Model.TeacherSubject.WW9_First</th> }
                    @if(Model.TeacherSubject.WW10_First != 0) { <th>@Model.TeacherSubject.WW10_First</th> }
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Written Works</td>
                @if(wwcount_First == 0) { <th>No Written Works</th> }
                else
                {
                    @if(Model.TeacherSubject.WW1_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW1_First" 
                            asp-for="StudentScore.WW1_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW2_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW2_First" 
                            asp-for="StudentScore.WW2_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW3_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW3_First" 
                            asp-for="StudentScore.WW3_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW4_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW4_First" 
                            asp-for="StudentScore.WW4_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW5_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW5_First" 
                            asp-for="StudentScore.WW5_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW6_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW6_First" 
                            asp-for="StudentScore.WW6_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW7_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW7_First" 
                            asp-for="StudentScore.WW7_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW8_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW8_First" 
                            asp-for="StudentScore.WW8_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW9_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW9_First" 
                            asp-for="StudentScore.WW9_First"/>
                    </td> }
                    @if(Model.TeacherSubject.WW10_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.WW10_First" 
                            asp-for="StudentScore.WW10_First"/>
                    </td> }
                }
            </tr>        
        </tbody>    
    </table>        
    <table class="pure-table">
        <thead>
            <tr>
                <th></th>
                @if(ptcount_First == 0) { <th>No Performance Tasks</th> }
                else
                {
                    @if(Model.TeacherSubject.PT1_First != 0) { <th>@Model.TeacherSubject.PT1_First</th> }
                    @if(Model.TeacherSubject.PT2_First != 0) { <th>@Model.TeacherSubject.PT2_First</th> }
                    @if(Model.TeacherSubject.PT3_First != 0) { <th>@Model.TeacherSubject.PT3_First</th> }
                    @if(Model.TeacherSubject.PT4_First != 0) { <th>@Model.TeacherSubject.PT4_First</th> }
                    @if(Model.TeacherSubject.PT5_First != 0) { <th>@Model.TeacherSubject.PT5_First</th> }
                    @if(Model.TeacherSubject.PT6_First != 0) { <th>@Model.TeacherSubject.PT6_First</th> }
                    @if(Model.TeacherSubject.PT7_First != 0) { <th>@Model.TeacherSubject.PT7_First</th> }
                    @if(Model.TeacherSubject.PT8_First != 0) { <th>@Model.TeacherSubject.PT8_First</th> }
                    @if(Model.TeacherSubject.PT9_First != 0) { <th>@Model.TeacherSubject.PT9_First</th> }
                    @if(Model.TeacherSubject.PT10_First != 0) { <th>@Model.TeacherSubject.PT10_First</th> }
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Performance Tasks</td>
                @if(ptcount_First == 0) { <th>No Performance Tasks</th> }
                else
                {
                    @if(Model.TeacherSubject.PT1_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT1_First" 
                            asp-for="StudentScore.PT1_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT2_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT2_First" 
                            asp-for="StudentScore.PT2_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT3_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT3_First" 
                            asp-for="StudentScore.PT3_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT4_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT4_First" 
                            asp-for="StudentScore.PT4_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT5_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT5_First" 
                            asp-for="StudentScore.PT5_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT6_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT6_First" 
                            asp-for="StudentScore.PT6_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT7_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT7_First" 
                            asp-for="StudentScore.PT7_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT8_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT8_First" 
                            asp-for="StudentScore.PT8_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT9_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT9_First" 
                            asp-for="StudentScore.PT9_First"/>
                    </td> }
                    @if(Model.TeacherSubject.PT10_First != 0) { <td>
                        <input type="number" min="0" max="@Model.TeacherSubject.PT10_First" 
                            asp-for="StudentScore.PT10_First"/>
                    </td> }
                }
            </tr>        
        </tbody>    
    </table>     
    <button id="saveBtn" disabled class="pure-button pure-button-primary" style="margin-top: 1rem;">
        Save Changes
    </button>
    <form id="scoresForm" style="display: hidden;">
        @Html.AntiForgeryToken()
    </form>   
</div>

@section Scripts{
    <script>
        const model = @Html.Raw(Json.Serialize(Model));

        function hasChanges() {
            let changed = false;
            $("input[type='number']").each(function () {
                const fieldName = this.name; // matches asp-for property
                const currentValue = this.value;
                const originalValue = model[fieldName.charAt(0).toLowerCase() + fieldName.slice(1)];
                    
                // normalize null/undefined and string vs number
                if (currentValue !== String(originalValue ?? "")) {
                    changed = true;
                    return false; // break loop
                }
            });
            return changed;
        } 

        // Enable save button only if something changed
        $("input[type='number']").on("input", function () {
            if (hasChanges()) {
                $("#saveBtn").prop("disabled", false);
            } else {
                $("#saveBtn").prop("disabled", true);
            }
        });

        // Warn before leaving if there are changes
        $(window).on("beforeunload", function () {
            if (hasChanges()) {
                return "You have unsaved changes!";
            }
        });

        function getChangedFields() {
            const changes = {};
            $("input[type='number']").each(function () {
                const fieldName = this.name;
                const currentValue = this.value;
                const originalValue = model[fieldName.charAt(0).toLowerCase() + fieldName.slice(1)];

                if (currentValue !== String(originalValue ?? "")) {
                    changes[fieldName.charAt(0).toLowerCase() + fieldName.slice(1)] = currentValue;
                }
            });
            return changes;
        }

        $("#saveBtn").click(function (e) {
            e.preventDefault();

            const changes = getChangedFields()

            Object.keys(changes).forEach(key => {
                model[key] = changes[key];
            });

            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '@Url.Action("SaveStudentScoresChanges", "Grades")',
                type: 'POST',
                contentType: 'application/json',
                headers: { 'RequestVerificationToken': token },
                data: JSON.stringify(model),
                success: function (response) {
                    $("input[type='number']").each(function () {
                        initialValues[this.name] = this.value;
                    });
                    alert("Changes saved successfully!");

                    if (response.redirectUrl) {
                        window.location.href = response.redirectUrl;
                    }
                    // reset initial values so button disables again
                    $("#saveBtn").prop("disabled", true);
                },
                error: function (xhr) {
                    alert("Error saving changes: " + xhr.responseText);
                }
            });
        });
    </script>
}