@model lms_test1.Models.ViewModels.TeachersManagement.LMSUserEditViewModel

@{
    ViewData["Title"] = "Edit Teacher Account";
}

<header>
    <div class="breadcrumbs">
        <a asp-area="" asp-controller="TeachersManagement" asp-action="Index">Teacher Management</a> > <a
            href="#0/">@ViewData["Title"]</a>
    </div>

    <h2 class="title">@ViewData["Title"]  - @Model.LastName, @Model.FirstName</h2>
</header>

<div class="prevent-overflow px-8">

    <form class="pure-form pure-form-stacked" asp-action="Edit">
        <fieldset>
            <legend>
                <a asp-action="Index">Back to List</a>
            </legend>

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <div class="pure-g">
                <div class="pure-u-1 pure-u-md-1-3">
                    <label asp-for="FirstName"></label>
                    <input asp-for="FirstName" class="pure-u-23-24" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>

                <div class="pure-u-1 pure-u-md-1-3">
                    <label asp-for="MiddleName"></label>
                    <input asp-for="MiddleName" class="pure-u-23-24" />
                    <span asp-validation-for="MiddleName" class="text-danger"></span>
                </div>

                <div class="pure-u-1 pure-u-md-1-3">
                    <label asp-for="LastName"></label>
                    <input asp-for="LastName" class="pure-u-23-24" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>

                <div class="pure-u-1 pure-u-md-1-3">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="pure-u-23-24" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="pure-u-1 pure-u-md-1-3">
                    <label asp-for="UserName"></label>
                    <input asp-for="UserName" class="pure-u-23-24" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>

                <div class="pure-u-1 pure-u-md-1-3">
                    <label class="pure-checkbox">
                        <input asp-for="Verified" />
                        @Html.DisplayNameFor(model => model.Verified)
                    </label>
                </div>
            </div>

            <div style="margin-top: 1rem;">
                <button type="submit" id="submitBtn" class="pure-button pure-button-primary">Save</button>
            </div>
        </fieldset>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");
        const submitBtn = document.getElementById("submitBtn");

        // Capture initial state
        const initialState = new FormData(form);
        const initialValues = Object.fromEntries(initialState.entries());

        // Helper to compare current state
        function hasFormChanged() {
            const currentState = new FormData(form);
            const currentValues = Object.fromEntries(currentState.entries());

            return Object.keys(initialValues).some(key => {
                return initialValues[key] !== currentValues[key];
            });
        }

        // Listen for input changes
        form.addEventListener("input", () => {
            submitBtn.disabled = !hasFormChanged();
        });

        // Also listen for select and checkbox changes
        form.addEventListener("change", () => {
            submitBtn.disabled = !hasFormChanged();
        });
    });
</script>




@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
