@model lms_test1.Models.Subject

@{
    ViewData["Title"] = "Create Subject";
}

<header>
    <div class="breadcrumbs">
        <a asp-area="" asp-controller="Subject" asp-action="Index">Subject Management</a> > <a href="#0/">@ViewData["Title"]</a>
    </div>
    <h2 class="title font-bold text-2xl">@ViewData["Title"]</h2>
</header>

<div class="prevent-overflow px-8">
    <form class="pure-form pure-form-stacked" asp-action="Create">
        <fieldset>
            <legend>
                <a asp-action="Index">Back to List</a>
            </legend>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="pure-g">
                <div class="pure-u-1 pure-u-md-1-3">
                    <label asp-for="Name"></label>
                    <input asp-for="Name" class="pure-u-23-24" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div> 
                <div class="pure-u-1 pure-u-md-1-3">
                    <label asp-for="Track"></label>                    
                    <select asp-for="Track" class="pure-u-23-24" required>
                        @foreach (var track in (IEnumerable<string>)ViewData["Tracks"])
                        {
                            <option value="@track" >@track</option>
                        }
                    </select>
                    <span asp-validation-for="Track" class="text-danger"></span>
                </div>
            </div>
            <div class="pure-u-1" style="margin-top: 1rem;">
                <input type="submit" value="Create" class="pure-button pure-button-primary" />
            </div>
        </fieldset>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
